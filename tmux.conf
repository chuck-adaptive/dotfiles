bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

unbind C-b
set -g prefix C-s
bind-key -r C-s send-prefix

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-H" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-J" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-K" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-L" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-H select-pane -L
bind-key -T copy-mode-vi C-J select-pane -D
bind-key -T copy-mode-vi C-K select-pane -U
bind-key -T copy-mode-vi C-L select-pane -R

set-option -g default-terminal $TERM
set-option -g status-keys "emacs"

# Color scheme
set -g status-bg '#268bd2'
set -g status-fg '#eee8d5'

set-window-option -g window-status-current-bg '#d33682'
set-window-option -g window-status-current-fg '#eee8d5'

set -g status-left-length 100
set -g status-right-length 100
set -g status-left " [#S] "
set -g status-right "|#(tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | cut -c 1-4 | tr '\\n' '|') #(date '+%m/%d/%y %H:%M') "

set-window-option -g window-status-format "#W(#I)"

set-window-option -g window-status-current-format " #W(#I) "

bind-key - split-window -v -c '#{pane_current_path}'
bind-key \ split-window -h -c '#{pane_current_path}'

bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

bind c new-window -c '#{pane_current_path}'

set-option -g base-index 1
set-option -g renumber-windows on

bind-key b break-pane -d

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
#bind-key -T vi-copy v begin-selection
bind -T copy-mode-vi v send -X begin-selection
# bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

bind C-l send-keys 'C-l'

# prefix capital K will kill the current session and join the next open one
bind-key K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# prefix control b breaks current to new tmux session with tat
bind-key C-b send-keys 'tat && exit' 'C-m'

bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Upgraded to vim 8 on OS Sierra to get copy/paste working
set -g default-command "reattach-to-user-namespace -l zsh"

# be sure to see note* below
set -g window-status-format '#I:#(pwd="#{pane_current_path}"; echo ${pwd####*/})#F'
set -g window-status-current-format '#I:#(pwd="#{pane_current_path}"; echo ${pwd####*/})#F'

set -g history-limit 30000
